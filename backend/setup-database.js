const { Pool } = require('pg');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

async function setupDatabase() {
  console.debug('üöÄ Setting up VibeLegal database...');
  
  const pool = new Pool({
    connectionString: process.env.DATABASE_URL,
    ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
  });

  try {
    // Test connection
    console.debug('üì° Testing database connection...');
    await pool.query('SELECT NOW()');
    console.debug('‚úÖ Database connection successful');

    // Read and execute schema
    console.debug('üìã Creating database schema...');
    const schemaSQL = fs.readFileSync(path.join(__dirname, 'database.sql'), 'utf8');
    await pool.query(schemaSQL);
    console.debug('‚úÖ Database schema created');

    // Check if demo data should be inserted
    const { rows } = await pool.query('SELECT COUNT(*) FROM users');
    const userCount = parseInt(rows[0].count);

    if (userCount === 0) {
      console.debug('üìù Inserting demo data...');
      const bcrypt = require('bcryptjs');
      
      // Create demo users with hashed passwords
      const demoPassword = await bcrypt.hash('DemoPassword123!', 10);
      
      await pool.query(`
        INSERT INTO users (email, password_hash, subscription_tier, contracts_used_this_month) VALUES 
        ('demo@vibelegal.com', $1, 'basic', 3),
        ('premium@vibelegal.com', $1, 'premium', 15),
        ('lawyer@lawfirm.com', $1, 'basic', 8)
      `, [demoPassword]);

      // Insert demo contracts
      await pool.query(`
        INSERT INTO contracts (user_id, contract_type, title, content, created_at) VALUES 
        (1, 'Employment Agreement', 'Software Developer Employment - TechCorp & John Smith', 
         'EMPLOYMENT AGREEMENT\n\nThis Employment Agreement ("Agreement") is entered into on January 15, 2024, between TechCorp Inc., a Delaware corporation ("Company"), and John Smith ("Employee").\n\n1. POSITION AND DUTIES\nEmployee shall serve as Software Developer and shall perform such duties as are customarily associated with such position.\n\n2. COMPENSATION\nEmployee shall receive an annual salary of $85,000, payable in accordance with Company''s standard payroll practices.\n\n3. BENEFITS\nEmployee shall be entitled to participate in all benefit programs generally available to Company employees.\n\n4. TERM\nThis Agreement shall commence on February 1, 2024, and shall continue until terminated in accordance with the provisions herein.\n\n5. TERMINATION\nEither party may terminate this Agreement with two (2) weeks written notice.\n\n6. CONFIDENTIALITY\nEmployee agrees to maintain the confidentiality of all proprietary information of the Company.\n\n7. GOVERNING LAW\nThis Agreement shall be governed by the laws of the State of California.\n\nLEGAL DISCLAIMER: This document is generated by AI and should be reviewed by a qualified attorney before use. This does not constitute legal advice.',
         NOW() - INTERVAL ''2 days''),
        (1, 'NDA', 'Non-Disclosure Agreement - TechCorp & Consulting Firm',
         'NON-DISCLOSURE AGREEMENT\n\nThis Non-Disclosure Agreement ("Agreement") is entered into on January 10, 2024, between TechCorp Inc. ("Disclosing Party") and ABC Consulting LLC ("Receiving Party").\n\n1. DEFINITION OF CONFIDENTIAL INFORMATION\n"Confidential Information" means any and all non-public, proprietary, or confidential information disclosed by the Disclosing Party.\n\n2. OBLIGATIONS OF RECEIVING PARTY\nReceiving Party agrees to hold all Confidential Information in strict confidence.\n\n3. TERM\nThis Agreement shall remain in effect for a period of three (3) years from the date of execution.\n\nLEGAL DISCLAIMER: This document is generated by AI and should be reviewed by a qualified attorney before use. This does not constitute legal advice.',
         NOW() - INTERVAL ''1 day'')
      `);
      
      console.debug('‚úÖ Demo data inserted');
    } else {
      console.debug('‚ÑπÔ∏è  Database already contains data, skipping demo data insertion');
    }

    console.debug('\nüéâ Database setup complete!');
    console.debug('\nüìã Demo Accounts:');
    console.debug('‚Ä¢ demo@vibelegal.com (Password: DemoPassword123!)');
    console.debug('‚Ä¢ premium@vibelegal.com (Password: DemoPassword123!)');
    console.debug('‚Ä¢ lawyer@lawfirm.com (Password: DemoPassword123!)');

  } catch (error) {
    console.error('‚ùå Database setup failed:', error.message);
    process.exit(1);
  } finally {
    await pool.end();
  }
}

// Run setup if called directly
if (require.main === module) {
  setupDatabase().catch(console.error);
}

module.exports = { setupDatabase };

